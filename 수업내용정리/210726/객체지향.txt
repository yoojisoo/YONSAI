* 커피, 음료수, 주류  => 이름, 가격, 만든다(), 마신다()

*추상화 class 마실것{
   이름,
             가격,
             추상화 만든다();// 추상메소드
             마신다(){
      sysout("마신다");
   }
}
추상메소드 : 기능이 있는데 내용(실행문)이 없는 메소드
*인터페이스 해준{  
   담는다();
             버린다();
             숙성한다();
}

class Coffee extends 마실것{
   샷
     //만든다 오버라이딩
}
class Drink extends 마실것{
   
   //만든다   오버라이딩  
}
class Alcol extends 마실것  implements 해준{
   
    // 만든다  오버라이딩  
     담는다(){}
     버린다(){}
     숙성한다{} 
}



[객체지향]
상품이라는 개발을 해야한다.   
1. 클래스  : 대상의 공통특성과 여러 기능(완전체)
   -> 단일상속 (확장) : 유사한 대상은 만들어진 클래스로 확장.
   예) 마우스이벤트 클래스
2. 추상클래스 : 메소드를 변경해야하는데 개발자가 실수로 놓칠수잇음.
                   -> 1개이상의 추상메소드로 만들어서 구현하게 해서 놓치지말자
                   * 단종시켜야하는 제품들 : 추상클래스로 전환                   
                     ( new 생성 금지 )
3. 인터페이스 : 메소드를 반드시 구현해야하는 모임
                    고정필드, 추상메소드로만 구성됨.
   예) 마우스 이벤트 인터페이스             
